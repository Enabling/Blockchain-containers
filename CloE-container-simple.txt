object debug = create("Debug");
object json = create("Json");
object array = create("Array");
object blockchain = create("Blockchain", "enco_shared");


function run(object data, object tags, string asset){
    # If script is triggered by HTTP input with HTTP & IOT tags
    if( (array.containsAll(tags, ["HTTP", "IOT"])) && asset == "cloudengine" ) {
        # Parse incoming message
        object incomingJson = json.parse(data["BODY"]);
        
        # Check the incoming payload content
        debug.log(incomingJson);
        
        # Extract containerid from incoming payload
        int containerId = incomingJson.get("containerid");
        object containerIdArray = [containerId];
        
        # Load blockchain contracts
        blockchain.loadWallet("<YOUR_WALLET_NAME>");
	    blockchain.loadContract("<YOUR_CONTRACT_NAME");
	    
	    # Check if our containerId is already created
        object containers = blockchain.invoke("getMyContainers", []);
	    object ids = containers["myIds"];
	    object addresses = containers["myAddresses"];
	    if(array.containsAll(ids, containerIdArray) == false){
        # containerId does not exist, so create container on the chain
	        string txCrHash = blockchain.invokeCustom("createContainer", [ containerId ], null, 500000, null);
	        debug.log("New container "+containerId+" created with transaction "+txCrHash);
	    }
    }
	
}